@startuml

title __ROLE's Class Diagram__\n

  namespace io.radien.webapp {
    namespace user {
      namespace tenant {
        namespace role {
          class io.radien.webapp.user.tenant.role.UserTenantGlobalRolesManager {
              - roleAdministratorInRootContext : boolean
              {static} - serialVersionUID : long
              + getSystemActiveTenant()
              + isRoleAdministratorInRootContext()
              + setRoleAdministratorInRootContext()
              + setSystemActiveTenant()
          }
        }
      }
    }
  }
  

  namespace io.radien.webapp {
    namespace user {
      namespace tenant {
        namespace role {
          class io.radien.webapp.user.tenant.role.UserTenantRolesManager {
              - assignableUserTenantRoles : Set<Long>
              - assignedRolesForUserTenant : List<SystemRole>
              - isNewRoleObjectAssigned : boolean
              - isOldRoleObjectUnassigned : boolean
              - isRoleAssigned : Map<Long, Boolean>
              {static} - serialVersionUID : long
              - unassignedUserTenantRoles : Set<Long>
              - userTenants : List<SystemTenant>
              + assignOrUnassignedRolesToUserTenant()
              + clearAssignableOrUnAssignedRoles()
              + clearDefaultRolesAssignedMap()
              + getAssignableUserTenantRoles()
              + getAssignedRolesForUserTenant()
              + getIsRoleAssigned()
              + getTenant()
              + getUnassignedUserTenantRoles()
              + getUserTenants()
              + init()
              + isAssignableOrUnassignedRole()
              + isAssignableOrUnassignedRoleType()
              + isNewRoleObjectAssigned()
              + isOldRoleObjectUnassigned()
              + loadUserTenantRoles()
              + returnBackToUsersTable()
              + selectedChangeTenant()
              + setAssignableUserTenantRoles()
              + setAssignedRolesForUserTenant()
              + setIsRoleAssigned()
              + setNewRoleObjectAssigned()
              + setOldRoleObjectUnassigned()
              + setTenant()
              + setUnassignedUserTenantRoles()
              + setUserTenants()
              - doAssignedRolesForUserTenant()
              - doUnassignedRolesForUserTenant()
          }
        }
      }
    }
  }
  

  io.radien.webapp.user.tenant.role.UserTenantGlobalRolesManager -up-|> io.radien.webapp.AbstractManager
  io.radien.webapp.user.tenant.role.UserTenantGlobalRolesManager o-- io.radien.webapp.activeTenant.ActiveTenantDataModelManager : activeTenantDataModelManager
  io.radien.webapp.user.tenant.role.UserTenantGlobalRolesManager o-- io.radien.api.model.tenant.SystemActiveTenant : systemActiveTenant
  io.radien.webapp.user.tenant.role.UserTenantGlobalRolesManager o-- io.radien.api.service.tenant.TenantRESTServiceAccess : tenantRESTServiceAccess
  io.radien.webapp.user.tenant.role.UserTenantGlobalRolesManager o-- io.radien.webapp.authz.WebAuthorizationChecker : webAuthorizationChecker
  io.radien.webapp.user.tenant.role.UserTenantRolesManager .up.|> java.io.Serializable
  io.radien.webapp.user.tenant.role.UserTenantRolesManager -up-|> io.radien.webapp.AbstractManager
  io.radien.webapp.user.tenant.role.UserTenantRolesManager o-- io.radien.api.model.tenant.SystemTenant : tenant
  io.radien.webapp.user.tenant.role.UserTenantRolesManager o-- io.radien.api.service.tenantrole.TenantRoleRESTServiceAccess : tenantRoleRESTServiceAccess
  io.radien.webapp.user.tenant.role.UserTenantRolesManager o-- io.radien.api.service.tenantrole.TenantRoleUserRESTServiceAccess : tenantRoleUserRESTServiceAccess
  io.radien.webapp.user.tenant.role.UserTenantRolesManager o-- io.radien.webapp.util.TenantRoleUtil : tenantRoleUtil
  io.radien.webapp.user.tenant.role.UserTenantRolesManager o-- io.radien.webapp.user.UserDataModel : userDataModel


 

@enduml
