@startuml

title __SERVICES's Class Diagram__\n

  namespace io.radien.ms.rolemanagement {
    namespace services {
      abstract class io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainBusinessService {
          + getPermissionRESTServiceAccess()
          + getRoleServiceAccess()
          + getTenantRESTServiceAccess()
          + getTenantRoleId()
          + getTenantRoleServiceAccess()
          + setPermissionRESTServiceAccess()
          + setRoleServiceAccess()
          + setTenantRESTServiceAccess()
          + setTenantRoleServiceAccess()
          # checkIfMandatoryParametersWereInformed()
          # checkIfParamsExists()
          # retrieveTenant()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      abstract class io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainService {
          # getTenantRoleIds()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.RoleBusinessService {
          {static} - serialVersionUID : long
          + delete()
          + exists()
          + getAll()
          + getById()
          + getSpecificRoles()
          + getTotalRecordsCount()
          + save()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.RoleResource {
          {static} - log : Logger
          + delete()
          + exists()
          + getAll()
          + getById()
          + getSpecificRoles()
          + getTotalRecordsCount()
          + save()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.RoleService {
          - entityManager : EntityManager
          {static} - log : Logger
          {static} - serialVersionUID : long
          + checkIfRolesExist()
          + delete()
          + get()
          + getAll()
          + getSpecificRoles()
          + getTotalRecordsCount()
          + save()
          - getCount()
          - getFieldPredicate()
          - getFilteredPredicate()
          - searchDuplicatedName()
          - validateUniquenessRecords()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.TenantRoleBusinessService {
          + delete()
          + existsAssociation()
          + getAll()
          + getById()
          + getPermissions()
          + getRolesForUserTenant()
          + getSpecific()
          + getTenantRoleUserServiceAccess()
          + getTenants()
          + isAnyRoleExistentForUser()
          + isPermissionExistentForUser()
          + isRoleExistentForUser()
          + save()
          + setTenantRoleUserServiceAccess()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.TenantRolePermissionBusinessService {
          + assignPermission()
          + delete()
          + getAll()
          + getTenantRolePermissionService()
          + setTenantRolePermissionService()
          + unAssignPermission()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.TenantRolePermissionResource {
          {static} - log : Logger
          + assignPermission()
          + delete()
          + getAll()
          + unAssignPermission()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.TenantRolePermissionService {
          - entityManager : EntityManager
          {static} - log : Logger
          + create()
          + delete()
          + get()
          + get()
          + getAll()
          + getEntityManager()
          + getTenantRolePermissionId()
          + isAssociationAlreadyExistent()
          # isAssociationAlreadyExistent()
          - getCount()
          - getFieldPredicate()
          - getFilteredPredicate()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.TenantRoleResource {
          {static} - log : Logger
          + delete()
          + exists()
          + getAll()
          + getById()
          + getIdByTenantRole()
          + getPermissions()
          + getRolesForUserTenant()
          + getSpecific()
          + getTenants()
          + isAnyRoleExistentForUser()
          + isPermissionExistentForUser()
          + isRoleExistentForUser()
          + save()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.TenantRoleService {
          - entityManager : EntityManager
          {static} - log : Logger
          + delete()
          + get()
          + get()
          + getAll()
          + getEntityManager()
          + getPermissions()
          + getRoleIdsForUserTenant()
          + getTenantRoleId()
          + getTenantRoleIds()
          + getTenants()
          + hasAnyRole()
          + hasPermission()
          + isAssociationAlreadyExistent()
          + save()
          # hasPermissionsAssociated()
          # hasUsersAssociated()
          # isAssociationAlreadyExistent()
          - getCount()
          - getFieldPredicate()
          - getFilteredPredicate()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.TenantRoleUserBusinessService {
          {static} - serialVersionUID : long
          + assignUser()
          + delete()
          + getActiveTenantRESTServiceAccess()
          + getTenantRoleUserServiceAccess()
          + setActiveTenantRESTServiceAccess()
          + setTenantRoleUserServiceAccess()
          + unAssignUser()
          # deleteActiveTenant()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.TenantRoleUserResource {
          {static} - log : Logger
          + assignUser()
          + delete()
          + getAll()
          + getAllUserIds()
          + unAssignUser()
      }
    }
  }
  

  namespace io.radien.ms.rolemanagement {
    namespace services {
      class io.radien.ms.rolemanagement.services.TenantRoleUserService {
          - entityManager : EntityManager
          {static} - log : Logger
          + create()
          + delete()
          + delete()
          + get()
          + get()
          + getAll()
          + getAllUserIds()
          + getEntityManager()
          + getTenantRoleUserId()
          + getTenantRoleUserIds()
          + getTenantRoleUserIds()
          + isAssociatedWithTenant()
          + isAssociationAlreadyExistent()
          # isAssociationAlreadyExistent()
          - getCount()
          - getCount()
          - getFieldPredicate()
          - getFilteredPredicate()
      }
    }
  }
  

  io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainBusinessService o-- io.radien.api.service.permission.PermissionRESTServiceAccess : permissionRESTServiceAccess
  io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainBusinessService o-- io.radien.api.service.role.RoleServiceAccess : roleServiceAccess
  io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainBusinessService o-- io.radien.api.service.tenant.TenantRESTServiceAccess : tenantRESTServiceAccess
  io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainBusinessService o-- io.radien.api.service.tenantrole.TenantRoleServiceAccess : tenantRoleServiceAccess
  io.radien.ms.rolemanagement.services.RoleBusinessService .up.|> java.io.Serializable
  io.radien.ms.rolemanagement.services.RoleBusinessService o-- io.radien.api.service.role.RoleServiceAccess : roleServiceAccess
  io.radien.ms.rolemanagement.services.RoleResource .up.|> io.radien.ms.rolemanagement.client.services.RoleResourceClient
  io.radien.ms.rolemanagement.services.RoleResource o-- io.radien.ms.rolemanagement.services.RoleBusinessService : roleBusinessService
  io.radien.ms.rolemanagement.services.RoleService .up.|> io.radien.api.service.role.RoleServiceAccess
  io.radien.ms.rolemanagement.services.TenantRoleBusinessService -up-|> io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainBusinessService
  io.radien.ms.rolemanagement.services.TenantRoleBusinessService o-- io.radien.api.service.tenantrole.TenantRoleUserServiceAccess : tenantRoleUserServiceAccess
  io.radien.ms.rolemanagement.services.TenantRolePermissionBusinessService .up.|> java.io.Serializable
  io.radien.ms.rolemanagement.services.TenantRolePermissionBusinessService -up-|> io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainBusinessService
  io.radien.ms.rolemanagement.services.TenantRolePermissionBusinessService o-- io.radien.api.service.tenantrole.TenantRolePermissionServiceAccess : tenantRolePermissionService
  io.radien.ms.rolemanagement.services.TenantRolePermissionResource .up.|> io.radien.ms.rolemanagement.client.services.TenantRolePermissionResourceClient
  io.radien.ms.rolemanagement.services.TenantRolePermissionResource o-- io.radien.ms.rolemanagement.services.TenantRolePermissionBusinessService : tenantRolePermissionBusinessService
  io.radien.ms.rolemanagement.services.TenantRolePermissionService .up.|> io.radien.api.service.tenantrole.TenantRolePermissionServiceAccess
  io.radien.ms.rolemanagement.services.TenantRolePermissionService -up-|> io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainService
  io.radien.ms.rolemanagement.services.TenantRoleResource .up.|> io.radien.ms.rolemanagement.client.services.TenantRoleResourceClient
  io.radien.ms.rolemanagement.services.TenantRoleResource o-- io.radien.ms.rolemanagement.services.TenantRoleBusinessService : tenantRoleBusinessService
  io.radien.ms.rolemanagement.services.TenantRoleService .up.|> io.radien.api.service.tenantrole.TenantRoleServiceAccess
  io.radien.ms.rolemanagement.services.TenantRoleUserBusinessService .up.|> java.io.Serializable
  io.radien.ms.rolemanagement.services.TenantRoleUserBusinessService -up-|> io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainBusinessService
  io.radien.ms.rolemanagement.services.TenantRoleUserBusinessService o-- io.radien.api.service.tenant.ActiveTenantRESTServiceAccess : activeTenantRESTServiceAccess
  io.radien.ms.rolemanagement.services.TenantRoleUserBusinessService o-- io.radien.api.service.tenantrole.TenantRoleUserServiceAccess : tenantRoleUserServiceAccess
  io.radien.ms.rolemanagement.services.TenantRoleUserResource .up.|> io.radien.ms.rolemanagement.client.services.TenantRoleUserResourceClient
  io.radien.ms.rolemanagement.services.TenantRoleUserResource o-- io.radien.ms.rolemanagement.services.TenantRoleUserBusinessService : tenantRoleUserBusinessService
  io.radien.ms.rolemanagement.services.TenantRoleUserResource o-- io.radien.api.service.tenantrole.TenantRoleUserServiceAccess : tenantRoleUserServiceAccess
  io.radien.ms.rolemanagement.services.TenantRoleUserService .up.|> io.radien.api.service.tenantrole.TenantRoleUserServiceAccess
  io.radien.ms.rolemanagement.services.TenantRoleUserService -up-|> io.radien.ms.rolemanagement.services.AbstractTenantRoleDomainService







@enduml
