@startuml

title __SERVICES's Class Diagram__\n

  namespace io.radien.ms.rolemanagement.client.services {
    class io.radien.ms.rolemanagement.client.services.RoleFactory {
        {static} - log : Logger
        {static} + convert()
        {static} + convert()
        {static} + convertJsonToPage()
        {static} + convertToJsonObject()
        {static} + create()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    class io.radien.ms.rolemanagement.client.services.RoleRESTServiceClient {
        {static} - log : Logger
        {static} - serialVersionUID : long
        + create()
        + delete()
        + getAll()
        + getOAF()
        + getRoleById()
        + getRoleByName()
        + getRolesByDescription()
        + getRolesByIds()
        + getTotalRecordsCount()
        - createRequester()
        - deleteRequester()
        - getAllRequester()
        - getRoleByIdRequester()
        - getRoleByNameRequester()
        - getRolesByDescriptionRequester()
        - getSystemRoles()
        - getTotalRecordsCountRequester()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    interface io.radien.ms.rolemanagement.client.services.RoleResourceClient {
        {abstract} + delete()
        {abstract} + exists()
        {abstract} + getAll()
        {abstract} + getById()
        {abstract} + getSpecificRoles()
        {abstract} + getTotalRecordsCount()
        {abstract} + save()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    class io.radien.ms.rolemanagement.client.services.TenantRoleFactory {
        {static} + convert()
        {static} + convert()
        {static} + convertJsonToPage()
        {static} + convertToJsonObject()
        {static} + create()
        - TenantRoleFactory()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    class io.radien.ms.rolemanagement.client.services.TenantRolePermissionFactory {
        {static} + convert()
        {static} + convert()
        {static} + convertJsonToPage()
        {static} + convertToJsonObject()
        {static} + create()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    class io.radien.ms.rolemanagement.client.services.TenantRolePermissionRESTServiceClient {
        + assignPermission()
        + getPermissions()
        + unAssignPermission()
        + unAssignPermission()
        # getPermissionsCore()
        - assignPermissionCore()
        - unAssignPermissionCore()
        - unAssignPermissionCore()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    interface io.radien.ms.rolemanagement.client.services.TenantRolePermissionResourceClient {
        {abstract} + assignPermission()
        {abstract} + delete()
        {abstract} + getAll()
        {abstract} + unAssignPermission()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    class io.radien.ms.rolemanagement.client.services.TenantRoleRESTServiceClient {
        {static} - log : Logger
        {static} - serialVersionUID : long
        + exists()
        + getAll()
        + getIdByTenantRole()
        + getPermissions()
        + getRolesForUserTenant()
        + getTenantRoleById()
        + getTenantRoles()
        + getTenants()
        + save()
        # getAllCore()
        # getIdByTenantRoleCore()
        - existsCore()
        - getPermissionsCore()
        - getRolesForUserTenantCore()
        - getTenantRoleByIdCore()
        - getTenantRolesCore()
        - getTenantsCore()
        - saveCore()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    interface io.radien.ms.rolemanagement.client.services.TenantRoleResourceClient {
        {abstract} + delete()
        {abstract} + exists()
        {abstract} + getAll()
        {abstract} + getById()
        {abstract} + getIdByTenantRole()
        {abstract} + getPermissions()
        {abstract} + getRolesForUserTenant()
        {abstract} + getSpecific()
        {abstract} + getTenants()
        {abstract} + isAnyRoleExistentForUser()
        {abstract} + isPermissionExistentForUser()
        {abstract} + isRoleExistentForUser()
        {abstract} + save()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    class io.radien.ms.rolemanagement.client.services.TenantRoleUserFactory {
        {static} + convert()
        {static} + convert()
        {static} + convertJsonToPage()
        {static} + convertToJsonObject()
        {static} + create()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    class io.radien.ms.rolemanagement.client.services.TenantRoleUserRESTServiceClient {
        {static} - serialVersionUID : long
        + assignUser()
        + delete()
        + getUsers()
        + getUsersIds()
        + unAssignUser()
        # getPageIds()
        # getUsersCore()
        # getUsersIdsCore()
        - assignUserCore()
        - deleteCore()
        - unAssignUserCore()
    }
  }
  

  namespace io.radien.ms.rolemanagement.client.services {
    interface io.radien.ms.rolemanagement.client.services.TenantRoleUserResourceClient {
        {abstract} + assignUser()
        {abstract} + delete()
        {abstract} + getAll()
        {abstract} + getAllUserIds()
        {abstract} + unAssignUser()
    }
  }
  

  io.radien.ms.rolemanagement.client.services.RoleRESTServiceClient .up.|> io.radien.api.service.role.RoleRESTServiceAccess
  io.radien.ms.rolemanagement.client.services.RoleRESTServiceClient -up-|> io.radien.ms.authz.security.AuthorizationChecker
  io.radien.ms.rolemanagement.client.services.RoleRESTServiceClient o-- io.radien.ms.rolemanagement.client.util.ClientServiceUtil : clientServiceUtil
  io.radien.ms.rolemanagement.client.services.RoleRESTServiceClient o-- io.radien.api.OAFAccess : oaf
  io.radien.ms.rolemanagement.client.services.TenantRolePermissionRESTServiceClient .up.|> io.radien.api.service.tenantrole.TenantRolePermissionRESTServiceAccess
  io.radien.ms.rolemanagement.client.services.TenantRolePermissionRESTServiceClient -up-|> io.radien.ms.authz.security.AuthorizationChecker
  io.radien.ms.rolemanagement.client.services.TenantRolePermissionRESTServiceClient o-- io.radien.ms.rolemanagement.client.util.ClientServiceUtil : clientServiceUtil
  io.radien.ms.rolemanagement.client.services.TenantRolePermissionRESTServiceClient o-- io.radien.api.OAFAccess : oaf
  io.radien.ms.rolemanagement.client.services.TenantRoleRESTServiceClient .up.|> io.radien.api.service.tenantrole.TenantRoleRESTServiceAccess
  io.radien.ms.rolemanagement.client.services.TenantRoleRESTServiceClient -up-|> io.radien.ms.authz.security.AuthorizationChecker
  io.radien.ms.rolemanagement.client.services.TenantRoleRESTServiceClient o-- io.radien.ms.rolemanagement.client.util.ClientServiceUtil : clientServiceUtil
  io.radien.ms.rolemanagement.client.services.TenantRoleRESTServiceClient o-- io.radien.api.OAFAccess : oaf
  io.radien.ms.rolemanagement.client.services.TenantRoleUserRESTServiceClient .up.|> io.radien.api.service.tenantrole.TenantRoleUserRESTServiceAccess
  io.radien.ms.rolemanagement.client.services.TenantRoleUserRESTServiceClient -up-|> io.radien.ms.authz.security.AuthorizationChecker
  io.radien.ms.rolemanagement.client.services.TenantRoleUserRESTServiceClient o-- io.radien.ms.rolemanagement.client.util.ClientServiceUtil : clientServiceUtil
  io.radien.ms.rolemanagement.client.services.TenantRoleUserRESTServiceClient o-- io.radien.api.OAFAccess : oaf


 

@enduml
